package sleep.engine.types;

import sleep.runtime.*;
import java.util.*;

public class ArrayContainer implements ScalarArray
{
   protected ArrayList values;

   public ArrayContainer()
   {
      values = new ArrayList();
   }

   /** initial values must be a collection of Scalar's */
   public ArrayContainer(Collection initialValues)
   {
      values = new ArrayList(initialValues);
   }

   public Scalar pop()
   {
      return (Scalar)values.remove(0);
   }

   public Scalar push(Scalar value)
   {
      values.add(0, value);
      return value;
   }

   public int size()
   {
      return values.size();
   }

   public Scalar getAt(int index)
   {
      if (index >= values.size())
      {
         Scalar temp = SleepUtils.getEmptyScalar();
         values.add(temp);
         return temp;
      }

      return (Scalar)values.get(index);
   }

   public Iterator scalarIterator()
   {
      return values.iterator();
   }

   public Scalar add(Scalar value)
   {
      values.add(value);
      return value;
   }
}
